# -*- coding: utf-8 -*-
"""Nhom3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10OxdyZ3OfWCM-cfAO3ei9CkTm6VHe1I5
"""

def permute(a, results):
    if len(a) == 1:
        results.insert(len(results), a)
    else:
        for i in range(0, len(a)):
            element = a[i]
            a_copy = [a[j] for j in range(0, len(a)) if j != i]
            subresults = []
            permute(a_copy, subresults)
            for subresult in subresults:
                result = [element] + subresult
                results.insert(len(results), result)
results = []
matrix=[]
R = int(input())
for i in range (0,R):
    matrix.append( list(map(int, input().split())))
permute(range(len(matrix)), results)
minval = 9999999999999999999999999999
for indexes in results:
    cost = 0
    for row, col in enumerate(indexes):
        cost += matrix[row][col]
    minval = min(cost, minval)
print(minval)